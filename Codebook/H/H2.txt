H2
----------------------------------------------------
H2.1
----------------------------------------------------
def unitary_check(operator):
    """Checks if a complex-valued matrix is unitary.
    
    Args:
        operator (array[complex]): A square complex-valued array.
        
    Returns: 
        bool: Whether the matrix is unitary or not.
    """
    op = operator 
    return np.allclose(np.matmul(op,op.conj().T), np.eye(op.shape[0]))



H2.2
----------------------------------------------------
n_bits = 1
dev = qml.device("default.qubit", wires=n_bits)

@qml.qnode(dev)
def unitary_circuit(operator):
    """Applies a matrix to the state if it is unitary and correctly sized.
    
    Args:
        operator (array[complex]): A square complex-valued array.

    Returns:
        array[complex]: The state of the quantum system, after applying the
        operator, if valid.
    """
    if (unitary_check(operator)):
        qml.QubitUnitary(operator, wires=range(n_bits))

    return qml.state()
