----------------------------------------------------
A1
----------------------------------------------------
A1.1
----------------------------------------------------
n_bits = 4
dev = qml.device("default.qubit", wires=n_bits)

@qml.qnode(dev)
def naive_circuit():
    """
    Create a uniform superposition and return the probabilities.

    Returns: 
        array[float]: Probabilities for observing different outcomes.
    """
    for wire in range(n_bits):
        qml.Hadamard(wires=wire)


    return qml.probs(wires=range(n_bits))


A1.2
----------------------------------------------------
# Press submit to continue to the next node